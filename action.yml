name: Deploy to ${{ env.ENVIRONMENT }}
description: 'Deploy repo to environment'
inputs:
  aws_account:
    description: 'AWS account to assume'
    required: true
  image-tag:
    description: 'Image tag to deploy'
    required: true
  tags:
    description: 'Accounting tag for the cloudformation stack'
    required: false
  sqs-config-file-path:
    description: 'SQS config file to store in SSM'
    default: ''
    required: false
  cf-template:
    description: 'Path to cloudformation template'
    required: true
  name:
    description: 'Name of the cloudformation stack'
    required: true
  ssm-path:
    description: 'Path to store SQS config in SSM'
    default: ''
    required: false
  environment:
    description: 'The environment to deploy to'
    required: true
  cdn-bucket:
    description: 'Sync CDN with public folder'
    default: ''
    required: false

runs:
  using: 'composite'
  steps:
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Assume CD/CI role for AWS account
      uses: bisnow/github-actions-assume-role-for-environment@main
      with:
        aws_account: ${{ inputs.aws_account }}
    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2
    - name: Pull image
      shell: bash
      run: |
        docker pull ${{ env.REGISTRY }}:${{ inputs.image-tag }}
    - name: Sync assets with CDN
      shell: bash
      run: |
        docker create --name build-${{ github.run_id }} ${{ env.REGISTRY }}:${{ inputs.image-tag }}
        docker cp build-${{ github.run_id }}:/app/public ./s3-public-${{ github.run_id }}
        export CDN_PATH=$(cd s3-public-${{ github.run_id }} && basename $(find . -maxdepth 1 -type d -name "rc-[0-9]*"))
        aws s3 sync ./s3-public-${{ github.run_id }}/$CDN_PATH s3://${{ inputs.cdn-bucket }}/$CDN_PATH \
          --cache-control max-age=31536000 \
          --exclude "*.php" --exclude ".htaccess" --exclude ".gitignore" --exclude "*.txt" --exclude "*icon*" --exclude "vendor" --exclude "mix-manifest.json" \
          --follow-symlinks --delete
        docker rm build-${{ github.run_id }}
        rm -rf ./s3-public-${{ github.run_id }}
    - name: Tag image and push image
      shell: bash
      run: |
        docker buildx imagetools create -t ${{ env.REGISTRY }}:${{ inputs.environment }} ${{ env.REGISTRY }}:${{ inputs.image-tag }}
    - name: Check cloudformation template
      uses: stelligent/cfn_nag@master
      with:
        input_path: "./deploy/${{ env.ENVIRONMENT }}/ecs-fargate-service.yaml"
    - name: Write sqs config file to SSM
      uses: bisnow/github-actions-store-sqs-config-ssm@v1.2
      if: ${{ inputs.sqs-config-file-path != '' }}
      with:
        file-path: ${{ inputs.sqs-config-file-path }}
        base64: 'true'
        ssm-path: ${{ inputs.ssm-path }}
    - name: Deploy to AWS CloudFormation
      uses: aws-actions/aws-cloudformation-github-deploy@v1
      with:
        name: ${{ inputs.name }}
        template: ${{ inputs.cf-template-path }}
        parameter-overrides: "ImageVersion=${{ inputs.image-tag }}"
        tags: ${{ inputs.tags }}
        capabilities: CAPABILITY_NAMED_IAM
        no-fail-on-empty-changeset: "1"
        change-set-name: ${{ env.ECS_SERVICE }}-${{ github.run_number }}